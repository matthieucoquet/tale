#version 460
#extension GL_EXT_ray_tracing : enable
#extension GL_EXT_scalar_block_layout : enable
#extension GL_GOOGLE_include_directive : enable
#include "common_types.glsl"
#include "model_map_function"

Hit raymarch()
{   
    const vec3 origin = gl_ObjectRayOriginEXT;
    const vec3 direction = gl_ObjectRayDirectionEXT;

    const float pixel_radius = get_pixel_radius();
    const float len = length(direction);
    float t = gl_RayTminEXT;
    for (int i = 0; i < 256 && t < gl_RayTmaxEXT; i++)
    {
        Hit hit = map(origin + t * direction);
        const float global_distance = hit.distance / len;
        if(global_distance < pixel_radius * t) {
            return Hit(t, hit.material_id);
        }
        t += ADVANCE_RATIO * global_distance;
    }
    return Hit(-1.0, 0);
}

void main()
{    
    const Hit hit = raymarch();
    if (hit.distance > 0.0)
    {
        reportIntersectionEXT(hit.distance, hit.material_id);
    }
}